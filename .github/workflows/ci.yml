name: GitHub Actions Vercel Production Deployment
on:
  push:
    branches:
      - develop
jobs:
  Deploy-Admin-Production:
    runs-on: ubuntu-latest
    environment: PROD
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Build Admin Project
        run: yarn nx build sillok-admin
      - name: Prepare files for deployment
        run: |
          # 빌드 결과물 확인
          ls -la apps/sillok-admin/dist || echo "No dist directory found"
          # 결과물 복사를 위한 임시 폴더 생성
          mkdir -p build-output/admin
          # 모든 빌드 결과물 복사
          cp -rv apps/sillok-admin/dist/* build-output/admin/ || echo "No files to copy"
      - name: Create vercel.json
        run: |
          cat > build-output/admin/vercel.json << 'EOL'
          {
            "version": 2,
            "framework": "vite",
            "public": true,
            "rewrites": [
              {
                "source": "/(.*)",
                "destination": "/index.html"
              }
            ]
          }
          EOL
      - name: Create package.json for Vercel
        run: |
          cat > build-output/admin/package.json << 'EOL'
          {
            "name": "sillok-admin",
            "version": "1.0.0",
            "private": true,
            "dependencies": {
              "serve": "^14.0.0"
            },
            "scripts": {
              "start": "serve -s ."
            }
          }
          EOL
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_ADMIN_PROJECT_ID }}
          working-directory: ./build-output/admin
          vercel-args: '--prod'

  Deploy-User-Production:
    runs-on: ubuntu-latest
    environment: PROD
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Build User Project
        run: yarn nx build sillok-user
      - name: Prepare files for deployment
        run: |
          # 빌드 결과물 확인
          ls -la apps/sillok-user/dist || echo "No dist directory found"
          # 결과물 복사를 위한 임시 폴더 생성
          mkdir -p build-output/user
          # 모든 빌드 결과물 복사
          cp -rv apps/sillok-user/dist/* build-output/user/ || echo "No files to copy"
      - name: Create vercel.json
        run: |
          cat > build-output/user/vercel.json << 'EOL'
          {
            "version": 2,
            "framework": "vite",
            "public": true,
            "rewrites": [
              {
                "source": "/(.*)",
                "destination": "/index.html"
              }
            ]
          }
          EOL
      - name: Create package.json for Vercel
        run: |
          cat > build-output/user/package.json << 'EOL'
          {
            "name": "sillok-user",
            "version": "1.0.0",
            "private": true,
            "dependencies": {
              "serve": "^14.0.0"
            },
            "scripts": {
              "start": "serve -s ."
            }
          }
          EOL
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_USER_PROJECT_ID }}
          working-directory: ./build-output/user
          vercel-args: '--prod'
