name: GitHub Actions Vercel Production Deployment
on:
  push:
    branches:
      - develop
jobs:
  Deploy-Admin-Production:
    runs-on: ubuntu-latest
    environment: PROD
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_ADMIN_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Build Admin Project
        run: yarn nx build sillok-admin --prod
      - name: Create Vercel JSON Config
        run: |
          cat > apps/sillok-admin/vercel.json << 'EOL'
          {
            "version": 2,
            "framework": "vite",
            "buildCommand": "cd ../.. && yarn nx build sillok-admin",
            "outputDirectory": "dist",
            "rewrites": [
              {
                "source": "/(.*)",
                "destination": "/index.html"
              }
            ]
          }
          EOL
      - name: Install Vercel CLI
        run: npm install --global vercel
      - name: Setup Vercel Project
        run: |
          mkdir -p ~/.vercel
          echo '{"projectId":"${{ secrets.VERCEL_ADMIN_PROJECT_ID }}","orgId":"${{ secrets.VERCEL_ORG_ID }}"}' > ~/.vercel/project.json
      - name: Prepare dist directory
        run: |
          mkdir -p apps/sillok-admin/dist
          # 빌드 결과물 위치 확인
          find dist -type d -name "sillok-admin" | xargs -I{} ls -la {} || echo "No sillok-admin directory in dist"
          # 복사 시도
          cp -rv dist/apps/sillok-admin/* apps/sillok-admin/dist/ 2>/dev/null || cp -rv apps/sillok-admin/dist/* apps/sillok-admin/dist/ 2>/dev/null || echo "No dist files found to copy"
      - name: Deploy Admin Project to Vercel
        run: |
          cd apps/sillok-admin
          echo "Deploying Admin Project to Vercel..."
          vercel deploy --prod --token="${{ secrets.VERCEL_TOKEN }}" --yes
  
  Deploy-User-Production:
    runs-on: ubuntu-latest
    environment: PROD
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_USER_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Build User Project
        run: yarn nx build sillok-user --prod
      - name: Create Vercel JSON Config
        run: |
          cat > apps/sillok-user/vercel.json << 'EOL'
          {
            "version": 2,
            "framework": "vite",
            "buildCommand": "cd ../.. && yarn nx build sillok-user",
            "outputDirectory": "dist",
            "rewrites": [
              {
                "source": "/(.*)",
                "destination": "/index.html"
              }
            ]
          }
          EOL
      - name: Install Vercel CLI
        run: npm install --global vercel
      - name: Setup Vercel Project
        run: |
          mkdir -p ~/.vercel
          echo '{"projectId":"${{ secrets.VERCEL_USER_PROJECT_ID }}","orgId":"${{ secrets.VERCEL_ORG_ID }}"}' > ~/.vercel/project.json
      - name: Prepare dist directory
        run: |
          mkdir -p apps/sillok-user/dist
          # 빌드 결과물 위치 확인
          find dist -type d -name "sillok-user" | xargs -I{} ls -la {} || echo "No sillok-user directory in dist"
          # 복사 시도
          cp -rv dist/apps/sillok-user/* apps/sillok-user/dist/ 2>/dev/null || cp -rv apps/sillok-user/dist/* apps/sillok-user/dist/ 2>/dev/null || echo "No dist files found to copy"
      - name: Deploy User Project to Vercel
        run: |
          cd apps/sillok-user
          echo "Deploying User Project to Vercel..."
          vercel deploy --prod --token="${{ secrets.VERCEL_TOKEN }}" --yes
